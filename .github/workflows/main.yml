# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI / CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  id-token: write
  contents: read

jobs:
  test:
    name: Test project
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Installing dependencies
        uses: ./.github/actions/install_deps
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run the tests and generate coverage report
        run: yarn exec concurrently yarn:test yarn:lint yarn:check-types

  release:
    name: Run semantic release
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Installing dependencies
        uses: ./.github/actions/install_deps
        with:
          node-version: ${{ matrix.node-version }}
      - name: Release
        run: yarn semantic-release
        env:
          GH_TOKEN: ${{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}
          HUSKY: 0
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.FRONTEND_DEPLOYMENT_ROLE }}
          role-session-name: DeployFrontendUserSession
          role-duration-seconds: 900
          aws-region: us-east-1
      - name: Build
        run: yarn build
      - name: Deploy to S3
        run: aws s3 sync dist/ s3://${BUCKET_NAME}/${MICRO_FRONTEND_NAME}/${IDENTIFIER}
        env:
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          MICRO_FRONTEND_NAME: ${{ secrets.MICRO_FRONTEND_NAME }}
          IDENTIFIER: ${{ github.sha }}
      # - name: Update import map
      #   run: curl -u ${USERNAME}:${PASSWORD} -d '{ "service":"@project/'"${MICRO_FRONTEND_NAME}"'","url":"https://'"${CLOUDFRONT_HOST}"'/'"${MICRO_FRONTEND_NAME}"'/'"${IDENTIFIER}"'/'project-"${MICRO_FRONTEND_NAME}"'.js" }' -X PATCH https://${IMD_HOST}/services/\?env=prod -H "Accept:application/json" -H "Content-Type:application/json"
      #   env:
      #     USERNAME: ${{ secrets.IMD_USERNAME }}
      #     PASSWORD: ${{ secrets.IMD_PASSWORD }}
      #     MICRO_FRONTEND_NAME: ${{ secrets.MICRO_FRONTEND_NAME }}
      #     CLOUDFRONT_HOST: ${{ secrets.CLOUDFRONT_HOST }}
      #     IMD_HOST: ${{ secrets.IMD_HOST }}
      #     IDENTIFIER: ${{ github.sha }}
